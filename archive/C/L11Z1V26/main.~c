/****************************************************************************
 *                                                                          *
 * File    : main.c                                                         *
 *                                                                          *
 * Purpose : Console mode (command line) program.                           *
 *                                                                          *
 * History : Date      Reason                                               *
 *           00/00/00  Created                                              *
 *                                                                          *
 ****************************************************************************/
#include <conio.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
//Для Builder

#define _cputs(s)           cputs(s)
#define _textcolor(c)       textcolor(c)
#define _textbackground(c)  textbackground(c)
#define _cprintf(s)         cprintf(s)
#define _gotoxy(x,y)        gotoxy(x,y)
#define _strnset(s,n,c)     strnset(s,n,c)
#define _clrscr()           clrscr()
#define _clreol()           clreol()

/****************************************************************************
 *                                                                          *
 * Function: main                                                           *
 *                                                                          *
 * Purpose : Main entry point.                                              *
 *                                                                          *
 * History : Date      Reason                                               *
 *           00/00/00  Created                                              *
 *                                                                          *
 ****************************************************************************/
typedef struct _Naklad {
	int    number;
	int    day, mont, year;
    double summ;
	char   FIO[21];
	struct _Naklad *next,*prev;
} Naklad;
Naklad *curr=NULL, *head=NULL;

//Преобразование из кодировки Windows в кодировку DOS
char * WinToDos(char *source)
{
    char *result=calloc(strlen(source),sizeof(char));
    int i;   
	for( i=0; i<strlen(source); i++){
		if(source[i]>='А'&&source[i]<='п') 
			result[i]=source[i]-0x40;
		else if(source[i]>='р'&&source[i]<='я')
			result[i]=source[i]-0x10;
		else result[i]=source[i];
	}
	result[strlen(source)]=0;
	return(result);
}//WinToDos
//Форматированный ввод
Naklad GetString(void)
{
	register int i=0,f=0,j=0;
	register int key;
	Naklad tmp;
	
	char *string=calloc(256,1);
	_gotoxy(1,24);
	_textbackground(2);
	_clreol();
	do{ 
		key=_getch();
		switch(f)
		{
			case 9:
				if(j<20)
				{
					_cprintf("%c",key);
					tmp.FIO[j]=key;
					i++;
					j++;
				}
				else 
				{
					
					return tmp;
				}
				break;
			case 8:
				_ungetch(' ');
				f=9;
				break;
			case 7:
				if(key>='0'&&key<='9')
				{
					_cprintf("%c",key);
				    string[i]=key;
					i++;
			    }
				if(key=='.'&&j==0)
				{
					_cprintf(".");
					string[i]='.';
					i++;
					j=1;
				}
				if(key==',')
				{
					f=8;
					j=0;
					_ungetch(',');
					_cprintf(",");
					string[i]=0;
					tmp.summ=atof(string);
				}
				break;
			case 6:
				f=7;
				_cprintf(" ");
				break;
			case 5:
				_ungetch(',');
				_cprintf(",");
				f=6;
				j=0;
				break;
			case 4:
				if(key>='0'&&key<='9')
				{
					_cprintf("%c",key);
				    string[i]=key;
					i++;
					j++;
			    }
				if(j>=4) 
				{
					f=5;
					j=0;
					_cprintf("\"");
					_ungetch('\"');
					string[i]=0;
					i=0;
					tmp.year=atoi(string);
				}
				break;
			case 3:
				if(key>='0'&&key<='9')
				{
					_cprintf("%c",key);
				    string[i]=key;
					i++;
					j++;
			    }
				if(j>=2) 
				{
					f=4;
					j=0;
					_cprintf(".");
					_ungetch('.');
					string[i]=0;
					i=0;
					tmp.mont=atoi(string);
				}
				break;
			case 2:
				if(key>='0'&&key<='9')
				{
					_cprintf("%c",key);
				    string[i]=key;
					i++;
					j++;
			    }
				if(j>=2) 
				{
					f=3;
					j=0;
					_cprintf(".");
					_ungetch('.');
					string[i]=0;
					i=0;
					tmp.day=atoi(string);
				}
				break;
			case 1:
				_cprintf("%c",key);
				_cprintf("\"");
				_ungetch('\"');
				f=2;
				break;
			case 0:
				if(key>='0'&&key<='9')
				{
					string[i]=key;
					i++;
					_cprintf("%c",key);
				}
				if(key==':')
				{
					f=1;
					string[i]=0;
					i=0;
					tmp.number=atoi(string);
					_cprintf(":");
					_ungetch(' ');
				}
				break;

		}
		if(key=='\n'||key=='\r') break;
		if(key==27) {i=0; break;}
		
	}while(1);
	string[i]=0;
	return tmp;
}
void Create(void)
{
	curr->prev=NULL;
	curr->next=NULL;
	curr=NULL;
	head->next=NULL;
	head->prev=NULL;
	head=NULL;
}
//Добавление в конец списка
int Add(Naklad data)
{
	Naklad *tmp=malloc(sizeof(Naklad));
	if(!tmp)
	{
		_cputs(WinToDos("Что-то с памятью моей стало."));
		return 0;
	}//if
	if(head==NULL)
	{
		head=malloc(sizeof(Naklad));
		if(!head)
		{
			_cputs(WinToDos("Что-то с памятью моей стало."));
			return 0;
		}//if

		head->number=data.number;
		head->day   =data.day;
		head->mont  =data.mont;
		head->year  =data.year;
		head->summ  =data.summ;
		_strnset(head->FIO,0,20);
		strcpy(head->FIO,data.FIO);
		head->prev=NULL;
		head->next=NULL;
		curr=head;
		return 1;
	}//if
        if(!curr)
        {
           curr=malloc(sizeof(Naklad));
           if(!curr){
             _cputs(WinToDos("Что-то с памятью моей стало."));
             return 0;
           }
           curr->next=NULL;
        }
	while(curr->next!=NULL) curr=curr->next;
	tmp->number=data.number;
	tmp->day   =data.day;
	tmp->mont  =data.mont;
	tmp->year  =data.year;
	tmp->summ  =data.summ;
	_strnset(tmp->FIO,0,20);
	strcpy(tmp->FIO,data.FIO);
	tmp->prev=curr;
	tmp->next=NULL;
	curr->next=tmp;
	curr=curr->next;
        return 1;
}//Add
//Формат ввода: Номер: "Дата", Сумма, ФИО оператора
Naklad StringToNaklad(char string[])
{
	Naklad result;
	int i;
	sscanf(string,"%d: \"%d.%d.%d\", %lf, %s%n",
		&result.number,&result.day,&result.mont,&result.year,&result.summ,result.FIO,&i);
	return result;
}//StringToNaklad
void Delete(void)
{
	Naklad *tmp=curr->next;
	curr->prev->next=curr->next;
	curr->next->prev=curr->prev;
	free(curr);
	curr=tmp;
}
void print(void)
{
	Naklad *tmp=curr;
	curr=head;
        _gotoxy(1,2);
	while(curr!=NULL)
	{
		if(tmp==curr) _textbackground(5);
		else          _textbackground(1);
		_cprintf("%d %d.%d.%d %lf %s\r\n",
			curr->number,curr->day,curr->mont,curr->year,
			curr->summ,curr->FIO);
		curr=curr->next;
	}
	curr=tmp;
}
void GoToElem(int index)
{
	int i=0;
	Naklad *tmp=curr;
	curr=head;
	while(i<index)
	{
		if(curr->next==NULL) 
		{
			_cputs(WinToDos("Элемент с таким номером не обнаружен в списке\n"));
			curr=tmp;
			return;
		}
		curr=curr->next;
		i++;
	}
}
void Destory(void)
{
	curr=head;
	while(head!=NULL)
	{
		head=curr->next;
		free(curr);
		curr=head;
	}
	curr=NULL;
	head=NULL;
}
void Insert(Naklad data)
{
	Naklad *tmp=malloc(sizeof(Naklad));
	if(!tmp)
	{
		_cputs(WinToDos("Что-то с памятью моей стало."));
		return;
	}//if
	tmp->number=data.number;
	tmp->day   =data.day;
	tmp->mont  =data.mont;
	tmp->year  =data.year;
	tmp->summ  =data.summ;
	_strnset(tmp->FIO,0,20);
	strcpy(tmp->FIO,data.FIO);
	tmp->prev=curr->prev;
	tmp->next=curr;
	curr->prev->next=tmp;
	curr->prev=tmp;
}
Naklad eject(void)
{
	Naklad tmp;
	tmp.number=curr->number;
	tmp.day   =curr->day;
	tmp.mont  =curr->mont;
	tmp.year  =curr->year;
	tmp.summ  =curr->summ;
	strcpy(tmp.FIO,curr->FIO);
	tmp.next  =curr->next;
	tmp.prev  =curr->prev;
	curr->prev->next=curr->next;
	curr->next->prev=curr->prev;
	free(curr);
	curr=curr->next;
	return tmp;
}
/* 1 -- возрастание
   0 -- убывание
*/
void AddUpor(char naprav,Naklad data)
{
    Naklad *tmp;
	curr=head;
	if(!curr) { Add(data); return;}
	if(naprav) while(curr->next!=NULL&&curr->number<data.number) curr=curr->next;
	if(!naprav) while(curr->next!=NULL&&curr->number>data.number) curr=curr->next;
    if(!curr->prev)
    {
        tmp=malloc(sizeof(Naklad));
		strcpy(tmp->FIO,data.FIO);
		tmp->number=data.number;
		tmp->day=data.day;
		tmp->mont=data.mont;
		tmp->year=data.year;
		tmp->summ=data.summ;
		tmp->prev=NULL;
		tmp->next=head;
		head->prev=tmp;
		head=tmp;
		curr=head;
    	return;
    }
	Insert(data);
}
int main(int argc, char *argv[])
{
    char *string=calloc(80,1);
	Naklad tmp;
	int i;
	char naprav=1;
	_textbackground(1);
	_clrscr();
	_textbackground(4);
	_gotoxy(1,1);
	_clreol();
	_gotoxy(1,25);
	_textbackground(0);
	_clreol();
	_gotoxy(1,24);
	_textbackground(2);
	_clreol();
	_textcolor(15);
	_gotoxy(1,1);
	_textbackground(4);
	_cprintf(WinToDos("Лабораторная работа #11 Задача #1 Вариант #26"));
	_gotoxy(1,25);
	_textbackground(0);
	_cprintf(WinToDos("Режим отладки"));
	_textcolor(15);
	_textbackground(1);
    _gotoxy(1,2);
    for(i=0; i<5; i++)
    {
		AddUpor(1,GetString());
		print();
		  
    }
	Destory();
	_textbackground(1);
	_gotoxy(1,23);
     
	return 0;
}//main

